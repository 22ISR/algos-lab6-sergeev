"""
Практическая работа: Создание игры «Виселица»

Цель: Научиться применять основы алгоритмизации и программирования, включая использование циклов, условных конструкций, работы со строками и списками.
Задачи для выполнения:

    Создать базовую структуру программы
        Определите основную цель игры и опишите её в комментариях.
        Подсказка: Используйте функцию def main(): как точку входа в вашу программу.

    Подготовить список слов
        Создайте массив (список) из нескольких слов, которые будут использоваться в игре.
        Подсказка: Для начала можете использовать 5–10 слов, чтобы протестировать программу.

    Выбор случайного слова
        Программа должна выбирать случайное слово из списка при каждом запуске.
        Подсказка: Используйте модуль random и функцию random.choice().

    Реализовать отображение текущего состояния слова
        Добавьте отображение текущего состояния угадывания: например, "слово: _ _ _ _".
        Подсказка: Используйте строки или списки для хранения угаданных символов.

    Обработка ввода пользователя
        Добавьте запрос ввода одной буквы от игрока.
        Подсказка: Проверьте корректность ввода — игрок должен вводить только одну букву.

    Проверка буквы
        Реализуйте проверку, есть ли введённая буква в загаданном слове.
        Подсказка: Используйте цикл for, чтобы пройтись по всем символам загаданного слова.

    Обновление состояния игры
        Если буква угадана, обновите текущее состояние слова.
        Если буква не угадана, уменьшите количество оставшихся попыток.
        Подсказка: Используйте переменную для отслеживания оставшихся попыток.

    Отображение виселицы
        Реализуйте визуальное отображение виселицы, которое обновляется с каждой ошибкой.
        Подсказка: Используйте список строк (HANGMANPICS), где каждая строка — новая стадия виселицы.

    Проверка окончания игры
        Добавьте проверку, угадал ли игрок слово или закончились попытки.
        Подсказка: Используйте условные конструкции if для проверки победы или поражения.

    Реализовать повтор игры
        После окончания игры предложите игроку сыграть снова.
        Подсказка: Используйте цикл while и запрос на ввод "Хотите сыграть снова? (да/нет)".
"""

HANGMANPICS = [
    """
  +---+
  |   |
      |
      |
      |
      |
=========""",
    """
  +---+
  |   |
  O   |
      |
      |
      |
=========""",
    """
  +---+
  |   |
  O   |
  |   |
      |
      |
=========""",
    """
  +---+
  |   |
  O   |
 /|   |
      |
      |
=========""",
    """
  +---+
  |   |
  O   |
 /|\\  |
      |
      |
=========""",
    """
  +---+
  |   |
  O   |
 /|\\  |
 /    |
      |
=========""",
    """
  +---+
  |   |
  O   |
 /|\\  |
 / \\  |
      |
=========""",
]

COMMON_NOUNS = ['кот', 'собака', 'дом', 'луна', 'свет', 'мир', 'река', 'море', 'земля', 'книга', 'ручка', 'стул', 'стол', 'окно', 'дверь', 'комната', 'диван', 'машина', 'работа', 'игра', 'песня', 'цветок', 'зима', 'лето', 'осень', 'весна', 'друг', 'враг', 'мечта', 'радость', 'счастье', 'сила', 'любовь', 'жизнь', 'меч', 'котенок', 'собачка', 'детство', 'утро', 'вечер', 'ночь', 'день', 'час', 'минутка', 'улыбка', 'планета', 'звезда', 'солнце', 'дождь', 'снег', 'ветер', 'лес', 'парк', 'сад', 'старики', 'мечты', 'идеи', 'мысли', 'чувства', 'надежда', 'вера', 'страсть', 'тепло', 'холод', 'светло', 'темно', 'весело', 'грустно', 'легко', 'трудно', 'быстро', 'медленно', 'ярко', 'тускло', 'чисто', 'грязно', 'мяч', 'лук', 'зонт', 'камень', 'вода', 'небо', 'птица', 'мирок', 'ладонь', 'кукла', 'шарик', 'каша', 'печка', 'яблоко', 'гусь', 'утка', 'лиса', 'волк', 'медведь', 'лошадь', 'слон', 'тигр', 'рыба', 'мышь', 'щенок', 'птичка', 'дуб', 'береза', 'сосна', 'ель', 'трава', 'огород', 'грядка', 'лужа', 'тень', 'холодно', 'карандаш', 'листок', 'блокнот', 'тетрадь', 'газета', 'журнал', 'фильм', 'пляж', 'горы', 'остров', 'берег', 'песок', 'леса', 'тропа', 'путь', 'дорога', 'мост', 'автобус', 'поезд', 'самолет', 'такси', 'велосипед', 'скейтборд', 'ролики', 'пуля', 'нож', 'топор', 'лопата', 'вилка', 'ложка', 'кастрюля', 'сковорода', 'плита', 'духовка', 'холодильник', 'раковина', 'ванна', 'унитаз', 'кран', 'душ', 'шторка', 'зеркало', 'полка', 'шкаф', 'комод', 'стена', 'лестница', 'крыша', 'фундамент', 'кирпич', 'бетон', 'домик', 'замок', 'забор', 'ворота', 'улица', 'площадь', 'деревья', 'кусты', 'поляна', 'лужайка', 'клумба', 'борщ', 'суп', 'мясо', 'овощи', 'фрукты', 'печенье', 'пирог', 'торт', 'конфета', 'шоколад', 'мороженое', 'компот', 'сок', 'чай', 'кофе', 'молоко', 'кефир', 'йогурт', 'сыр', 'колбаса', 'хлеб', 'булка', 'батон', 'пирожок', 'пицца', 'салат', 'закуска', 'десерт', 'завтрак', 'обед', 'ужин', 'минута', 'секунда', 'неделя', 'месяц', 'год', 'век', 'эпоха', 'время', 'момент', 'событие', 'встреча', 'разговор', 'вопрос', 'ответ', 'идея', 'план', 'цель', 'задача', 'труд', 'учеба', 'школа', 'университет', 'класс', 'группа', 'проект', 'семинар', 'лекция', 'экзамен', 'тест', 'аттестат', 'диплом', 'друзья', 'товарищи', 'знакомые', 'соседи', 'коллеги', 'родственники', 'семья', 'мама', 'папа', 'брат', 'сестра', 'дядя', 'тетя', 'бабушка', 'дедушка', 'племянник', 'племянница', 'кузен', 'кузина', 'подруга', 'приятель', 'знакомый', 'соперник', 'союзник', 'единомышленник', 'команда', 'партия', 'движение', 'общество', 'народ', 'нация', 'страна', 'вселенная', 'смерть', 'горе', 'печаль', 'ненависть', 'дружба', 'верность', 'предательство', 'доверие', 'действие', 'результат', 'успех', 'неудача', 'шанс', 'выбор', 'решение', 'проблема', 'направление', 'маршрут', 'карта', 'компас', 'навигатор', 'путешествие', 'поездка', 'отпуск', 'экскурсия', 'отдых', 'приключение', 'туризм', 'природа', 'гора', 'озеро', 'океан', 'архипелаг', 'скала', 'утес', 'пещера', 'водопад', 'ручей', 'источник', 'родник', 'воздух', 'комета', 'астероид', 'галактика', 'космос', 'искусство', 'живопись', 'скульптура', 'музыка', 'танец', 'театр', 'кино', 'литература', 'поэзия', 'проза', 'роман', 'рассказ', 'повесть', 'стихотворение', 'статья', 'эссе', 'рецензия', 'обзор', 'критика', 'выставка', 'концерт', 'спектакль', 'шоу', 'фестиваль', 'праздник', 'торжество', 'юбилей', 'рождения', 'свадьба', 'традиция', 'обычаи', 'культура', 'наследие', 'история', 'предки', 'потомки', 'родословная', 'древность', 'современность', 'будущее', 'прогресс', 'развитие', 'наука', 'техника', 'технологии', 'изобретение', 'открытие', 'эксперимент', 'исследование', 'лаборатория', 'опыт', 'теория', 'гипотеза', 'факт', 'данные', 'инфомация', 'знание', 'мудрость', 'спорт', 'соревнование', 'чемпионат', 'турнир', 'матч', 'игрок', 'тренер', 'судья', 'арбитр', 'болельщик', 'фанат', 'трибуна', 'стадион', 'площадка', 'поле', 'ракетка', 'шайба', 'клюшка', 'бег', 'прыжки', 'плавание', 'велоспорт', 'гимнастика', 'борьба', 'бокс', 'шахматы', 'шашки', 'настольный', 'теннис', 'волейбол', 'баскетбол', 'футбол', 'хоккей', 'единоборства', 'фитнес', 'аэробика', 'йога', 'танцы', 'тренировка', 'физкультура', 'здоровье', 'выносливость', 'ловкость', 'скорость', 'гибкость', 'координация', 'баланс', 'мотивация', 'вдохновение', 'мелодия', 'ритм', 'гармония', 'звук', 'нота', 'инструмент', 'оркестр', 'ансамбль', 'певец', 'певица', 'хор', 'альбом', 'композиция', 'жанр', 'стиль', 'рок', 'поп', 'классика', 'джаз', 'блюз', 'фолк', 'электроника', 'рэп', 'хип-хоп', 'вечеринка', 'клуб', 'дискотека', 'атмосфера', 'настроение', 'эмоции', 'грусть']
"""words = input("Введите раширение: ")
words = words.split(' ')
for i in range(len(words)):
    if words[i] in COMMON_NOUNS:
        print(f"Слово уже есть в словаре.\n Вот списко уже существующих слов: {COMMON_NOUNS} \n__________________________________________________________")
    else:
        COMMON_NOUNS.append(words[i])
print(COMMON_NOUNS)"""

import random

print(f'Добро пожаловтаь в игру \"Виселица\". \nВ игре присутствует 7 уровней сложности. 1lvl - слово из 9 букв. 7lvl - слово из 3 букв')
Level = int(input("Введите сложность(длину слова) в игре: "))

def main(Level, game_mode = True):
    
    # тело игры
    while game_mode:
        print(f'Ваш уровень сложности: {Level} \n__________________________________________________________')
        answer_result = "_" # вывод интерфейса игры
        live = 0 # счетчик
        LEVEL_COMMON_NOUNS =[] # уровень сложности
        letter = [] # список использованных букв

        # создание массива слов конкретной длины
        for i in range(len(COMMON_NOUNS)):
            if len(COMMON_NOUNS[i]) == 3 + (7 - Level):
                LEVEL_COMMON_NOUNS.append(COMMON_NOUNS[i])

        answer = random.choice(LEVEL_COMMON_NOUNS)

        while len(answer_result) != len(answer)*2-1:
            answer_result += " _"
        print(answer_result)
        answer = list(answer)


        while live < 8:
            #проверка на готовность ответить
            Game_sit = input("Готовы ли ответить? (yes/no) \n")
            if Game_sit == 'yes':
                guess = ''
                while len(guess) != len(answer):
                    guess = input("Введите вашу догадку: ")
                if guess == ''.join(answer):
                    print("__________________________________________________________ \nПобеда \n__________________________________________________________")
                    live = 8
                    print(''.join(answer))
                    break
                else:
                    print('__________________________________________________________ \nGameOver \n__________________________________________________________')
                    live = 8
                    print(''.join(answer))
                    break
            elif Game_sit == 'no':
                guess = ''
                while (len(guess) != 1):
                    guess = input("Введите вашу догадку: ")
                if guess in letter:
                    print(f"Эта буква уже была.\n Вот списко уже использованных букв: {letter} \n__________________________________________________________")
                    continue
                else:
                    letter.append(guess)

                # цикл проверки буквы и вывод результата
                for i in range (len(answer)):
                    if guess in answer:
                        if guess == answer[i]:
                            answer_result = list(answer_result)
                            answer_result[i*2] = guess
                            answer_result = ''.join(answer_result)
                            print(f"{answer_result} \n__________________________________________________________")
                    else:
                        print(HANGMANPICS[live])
                        print(f"{answer_result} \n__________________________________________________________")
                        live += 1
                        break
            
            #Конец игры
            if live == 7:
                live += 1
                print("GameOver \n__________________________________________________________")
                print(''.join(answer))
                
        game_mode = input("Пограем ещё? \n")
        if game_mode == 'no':
            game_mode == False
        else:
            game_mode == True
            Level = int(input("Введите сложность(длину слова) в игре: "))
        main(Level)
main(Level)